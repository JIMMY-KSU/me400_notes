{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Lecture 20 - Taylor Series and the Root of Numerical Methods\n",
    "\n",
    "## Overview, Objectives, and Key Terms\n",
    " \n",
    "At this point, the reader is equipped with the basic symbolic tools needed to perform algebraic, differential, and integral operations.  In this lecture, another topic from basic calculus is revisited: **Taylor series**. Along the way, we'll see how truncated series expansions lead to useful approximations and how those approximations pave the way for numerical methods."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Objectives\n",
    "\n",
    "By the end of this lesson, you should be able to\n",
    "\n",
    "- Symbolically compute series expansions of a function\n",
    "- Explain what is meant by *order* in the context of series expansions (and numerical approximation)\n",
    "- Numerically demonstrate that a series expansion of a function provides a good, *local* approximation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Key Terms\n",
    "\n",
    "- Taylor series\n",
    "- Maclaurin series\n",
    "- $\\mathcal{O}(\\Delta^n)$ as *order* in a different way\n",
    "- local approximation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Taylor Series\n",
    "\n",
    "The **Taylor series** of $f(x)$ about $x_0$ is\n",
    "\n",
    "$$\n",
    "\\begin{split}\n",
    "  f(x) &= f(x_0) + \\frac{df}{dx} \\Big |_{x = x_0} (x-x_0) + \\frac{1}{2} \\frac{d^2 f}{dx^2} \\Big |_{x = x_0} (x-x_0)^2 + \\frac{1}{6}\\frac{d^3 f}{d x^3} \\Big |_{x = x_0} (x-x_0)^3 + \\ldots \\\\\n",
    "       &= \\sum^{\\infty}_{n=0} \\frac{1}{n!}\\frac{d^n f}{dx^n} \\Big |_{x=x_0} (x-x_0)^n\n",
    "\\end{split}\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "The series is a **Maclaurin** series if $x_0 = 0$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "The Taylor series exists if $f(x)$ is infinitely differentiable at $x = x_0$, i.e., $f(x)$ is \"well behaved.\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "**Exercise**: Write a function that returns the $n$th term of a Taylor series for an function $f(x)$ about $x=x_0$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "SymPy can compute *truncated* Taylor series directly via:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "import sympy as sy\n",
    "sy.init_printing()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$e^{a x_{0}} + a \\left(x - x_{0}\\right) e^{a x_{0}} + \\frac{a^{2}}{2} \\left(x - x_{0}\\right)^{2} e^{a x_{0}} + \\frac{a^{3}}{6} \\left(x - x_{0}\\right)^{3} e^{a x_{0}} + \\mathcal{O}\\left(\\left(x - x_{0}\\right)^{4}; x\\rightarrow x_{0}\\right)$$"
      ],
      "text/plain": [
       "                            2         2  a⋅x₀    3         3  a⋅x₀            \n",
       " a⋅x₀               a⋅x₀   a ⋅(x - x₀) ⋅ℯ       a ⋅(x - x₀) ⋅ℯ        ⎛       \n",
       "ℯ     + a⋅(x - x₀)⋅ℯ     + ────────────────── + ────────────────── + O⎝(x - x₀\n",
       "                                   2                    6                     \n",
       "\n",
       "           \n",
       " 4        ⎞\n",
       ") ; x → x₀⎠\n",
       "           "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a, x, x_0 = sy.symbols('a x x_0')\n",
    "f = sy.exp(a*x)\n",
    "sy.series(f, x, x_0, 4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/latex": [
       "$$\\frac{a^{3}}{6} \\left(x - x_{0}\\right)^{3} e^{a x_{0}} + \\frac{a^{2}}{2} \\left(x - x_{0}\\right)^{2} e^{a x_{0}} + a \\left(x - x_{0}\\right) e^{a x_{0}} + e^{a x_{0}}$$"
      ],
      "text/plain": [
       " 3         3  a⋅x₀    2         2  a⋅x₀                           \n",
       "a ⋅(x - x₀) ⋅ℯ       a ⋅(x - x₀) ⋅ℯ                   a⋅x₀    a⋅x₀\n",
       "────────────────── + ────────────────── + a⋅(x - x₀)⋅ℯ     + ℯ    \n",
       "        6                    2                                    "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sy.series(f, x, x_0, 4).removeO()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "**Exercise**: Find the two term Taylor series expansion of $(1+x)^a$, known as the *binomial approximation*.  Explore this approximation for different values of $x$ and $a$.  What can you conclude?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "**Exercise**: Does the **Taylor** series exist"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Another Meaning for $\\mathcal{O}$\n",
    "\n",
    "What does $\\mathcal{O}$ mean?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Previously, $\\mathcal{O}(n^p)$ read *number of operations is proportional to* $n^p$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Now, $\\mathcal{O}(\\Delta^p)$ reads *all terms proportional to* $\\Delta^n$ *for* $n \\geq p$ (and specifically, as $\\Delta \\to 0$)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "**Exercise**: Approximate $e^x$ using Taylor series approximations with $n = 1, 2, \\ldots 10$ terms about $x_0 = 0$,  evaluate each expression for $x = 0.1$, and produce a graphic that compares these values to the true value."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Other Applications\n",
    "\n",
    "- Integration\n",
    "- Linearization (of, e.g., control systems)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "**Example**: Consider the following integral\n",
    "\n",
    "$$\n",
    "  \\int^1_0 \\cos(x^2) dx\n",
    "$$\n",
    "\n",
    "Integrate it!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Recap\n",
    "\n",
    "You should now be able to\n",
    "\n",
    "- Symbolically compute series expansions of a function\n",
    "- Explain what is meant by *order* in the context of series expansions (and numerical approximation)\n",
    "- Numerically demonstrate that a series expansion of a function provides a good, *local* approximation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
