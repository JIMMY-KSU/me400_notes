{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "Like merge sort, the default sorting algorithm used by np.sort is $O(n \\log n)$. Suppose you used np.sort to sort 100 different arrays each having 100,000 numbers, and the average time per sort was about 0.01 s. If you did the same thing for arrays with 1,000,000 numbers each, about how long do you think it would take on the average?\n",
    "\n",
    "HINT 1: Remember that  $\\log_b x^a = a \\log_b x$, e.g., $\\log_b 10^3 = 3 \\log_b 10$.\n",
    "\n",
    "HINT 2:  We use order as an engineering metric by assuming the time is proportional to whatever is inside the $O$.  If the method is $O(n)$, then $t \\propto n$ or $t = an$ for some (unknown) constant $a$. \n",
    "\n",
    "Circle your final answer."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "The Babylonian algorithm for estimate $\\sqrt{X}$ is\n",
    "\n",
    "$$\n",
    "    R = (R_{old} + X / R_{old}) / 2 \\, ,\n",
    "$$\n",
    "\n",
    "\n",
    "Below are several lines of Python code.  Eight of these,\n",
    "when put together, form a simple program to estimate the square root\n",
    "of 2 using the Babylonian algorithm.  The estimate is\n",
    "\"good enough\" if the **absolute** difference between $R_{new}$ and $R_{old}$\n",
    "is smaller than $10^{-4}$.\n",
    "\n",
    "HINT 1: Cross out any lines that can't be correct (e.g., what does `^` mean in Python, and what is $10^{-1}$ as a decimal?).  \n",
    "\n",
    "HINT 2:  Recall that `break` is one way to terminate a loop.\n",
    "\n",
    "```\n",
    "a. X = 2.0\n",
    "b. R_old = 1.0\n",
    "c. while True:\n",
    "d. while |R_old-R| < 10^-4\n",
    "e. R = (R_old + X / R_old) / 2\n",
    "f. if abs(R-R_old) < tau:\n",
    "g. if R-R_old < tau:\n",
    "h. break\n",
    "i. c = c + 1\n",
    "j. R_old = R\n",
    "k. tau = 0.0001\n",
    "l. tau = 10e-4\n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
